<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="com.byeon.boot3.product.ProductMapper">
    	
    	
    	<!-- detail -->
    	<select id="getDetail" resultMap="fileAddResult" parameterType="ProductVO">
    		SELECT P.*, PF.* 
    		FROM
    			PRODUCT P
    				INNER JOIN
    			PRODUCTFILES PF
    			USING(PRODUCTNUM)
    		WHERE PRODUCTNUM = #{productNum}
   			<if test="id != null">
   				AND ID = #{id}
			</if>
    	</select>
    	
    	
    

    	<!-- product -->
    	<select id="getList" resultMap="fileAddResult" parameterType="Pager">
    		SELECT P.*, PF.* FROM
    			(
    				SELECT * FROM PRODUCT WHERE
		    		PRODUCTNUM > 0
		    		
		    		<!-- seller product list 추가-->
		    		<!-- 만약 id가 들어온다면 이 코드 실행 -->
		    		<!-- Pager.java에서 id 추가해놓음 -->
		    		<!-- 재활용 하는것 굉장히 좋다! -->
		    		<choose>
		    			<when test="id != null">
		    				AND ID = #{id}
		    			</when>
		    			<otherwise>
		    				<!-- 구매자는 판매중인 상품만 보게 만들 경우 -->
		    				AND SALE = 1
		    			</otherwise>
		    		</choose>
		    		
		    		AND 
	
		    		<choose>
				    	<when test="kind == 'col1'">
				    		PRODUCTNAME
				    	</when>
				    	<otherwise>
				    		PRODUCTDETAIL
				    	</otherwise>
					</choose>
		    		LIKE CONCAT('%',#{search},'%')
		    		ORDER BY PRODUCTNUM DESC
		    		LIMIT #{startRow}, #{perPage}
		    	) P
	    			LEFT JOIN
	    		PRODUCTFILES PF
    			USING(PRODUCTNUM)

    		<!-- 강사
    		SELECT
    		FROM 
    		(
    			SELECT 
    				*
    			FROM PRODUCT 
    			WHERE PRODUCTNUM>0 ORDER BY PRODUCTNUM DESC
    			LIMIT #{startRow}, #{perPage}
    		) P
    		LEFT JOIN
    		PRODUCTFILES F
    		USING(PRODUCTNUM)
    		-->
    	</select>
    	
    	<resultMap type="ProductVO" id="fileAddResult">
			<id column="productNum" property="productNum"/>
			<result column="productName" property="productName"/>
			<result column="productPrice" property="productPrice"/>
			<result column="productCount" property="productCount"/>
			<result column="productDetail" property="productDetail"/>
			<!-- seller 부분 추가하면서 넣음 -->
			<result column="id" property="id"/>
			<result column="sale" property="sale"/>
			<collection property="filesVOs" javaType="java.util.List" ofType="ProductFilesVO">
				<id column="fileNum" property="fileNum"/>
				<result column="fileName" property="fileName"/>
				<result column="oriName" property="oriName"/>
			</collection>
		</resultMap>
    	
    	<select id="total" parameterType="Pager" resultType="java.lang.Long" >
    		SELECT COUNT(PRODUCTNUM) FROM PRODUCT
    		WHERE PRODUCTNUM > 0
    		
    		<!-- seller 갯수 세는 용도 -->
    		<if test="id != null">
		    	AND ID = #{id}
		    </if>
		    
    		AND
    		
    		<choose>
		    	<when test="kind == 'col1'">
		    		PRODUCTNAME
		    	</when>
		    	<otherwise>
		    		PRODUCTDETAIL
		    	</otherwise>
			</choose>
    		LIKE CONCAT('%',#{search},'%')
    	</select>
    	
    	
    	
    	<insert id="setAdd" parameterType="ProductVO" useGeneratedKeys="true" keyProperty="productNum">
    		INSERT INTO PRODUCT(PRODUCTNUM, PRODUCTNAME, PRODUCTPRICE, PRODUCTCOUNT, PRODUCTDETAIL, ID, SALE)
    		VALUES(#{productNum}, #{productName}, #{productPrice}, #{productCount}, #{productDetail}, #{id}, #{sale})
    	</insert>
    	
    	<insert id="setFileAdd" parameterType="ProductFilesVO">
    		INSERT INTO PRODUCTFILES
    		VALUES(NULL, #{productNum}, #{fileName}, #{oriName})
    	</insert>
    
    
    	<delete id="setDelete" parameterType="ProductVO">
    		DELETE FROM PRODUCT WHERE PRODUCTNUM = #{productNum}
    	</delete>
    	
    	
    	
    	<!-- productFile -->
    	<select id="getFileList" parameterType="ProductVO" resultType="ProductFilesVO">
    		SELECT * FROM PRODUCTFILES WHERE PRODUCTNUM = #{productNum}
    	</select>
    
    
    
    </mapper>